{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "491"
    },
    "items": [
        {
            "metadata": {
                "name": "local-test-control-plane",
                "uid": "3e5417dc-fe49-4b11-abf7-afdb9e35354c",
                "resourceVersion": "412",
                "creationTimestamp": "2022-11-23T22:35:36Z",
                "labels": {
                    "beta.kubernetes.io/arch": "arm64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "arm64",
                    "kubernetes.io/hostname": "local-test-control-plane",
                    "kubernetes.io/os": "linux",
                    "node-role.kubernetes.io/control-plane": "",
                    "node.kubernetes.io/exclude-from-external-load-balancers": ""
                },
                "annotations": {
                    "kubeadm.alpha.kubernetes.io/cri-socket": "unix:///run/containerd/containerd.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.244.0.0/24",
                "podCIDRs": [
                    "10.244.0.0/24"
                ],
                "taints": [
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    }
                ]
            },
            "status": {
                "capacity": {
                    "cpu": "2",
                    "ephemeral-storage": "61610796Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "hugepages-32Mi": "0",
                    "hugepages-64Ki": "0",
                    "memory": "6066880Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "2",
                    "ephemeral-storage": "61610796Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "hugepages-32Mi": "0",
                    "hugepages-64Ki": "0",
                    "memory": "6066880Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2022-11-23T22:36:00Z",
                        "lastTransitionTime": "2022-11-23T22:35:33Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2022-11-23T22:36:00Z",
                        "lastTransitionTime": "2022-11-23T22:35:33Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2022-11-23T22:36:00Z",
                        "lastTransitionTime": "2022-11-23T22:35:33Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2022-11-23T22:36:00Z",
                        "lastTransitionTime": "2022-11-23T22:36:00Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.18.0.2"
                    },
                    {
                        "type": "Hostname",
                        "address": "local-test-control-plane"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "a2a31a3229b74c149f67c46f6dda3863",
                    "systemUUID": "a2a31a3229b74c149f67c46f6dda3863",
                    "bootID": "d2b97ca8-a2f8-4feb-947e-68d1a1395436",
                    "kernelVersion": "5.15.68-0-virt",
                    "osImage": "Ubuntu 22.04.1 LTS",
                    "containerRuntimeVersion": "containerd://1.6.8",
                    "kubeletVersion": "v1.24.6",
                    "kubeProxyVersion": "v1.24.6",
                    "operatingSystem": "linux",
                    "architecture": "arm64"
                },
                "images": [
                    {
                        "names": [
                            "docker.io/library/import-2022-09-22@sha256:b973aa6d9144f3a18886ff8a132d22b751d11aa40e658dc33e8a475b2cb09f66",
                            "k8s.gcr.io/kube-proxy:v1.24.6"
                        ],
                        "sizeBytes": 108499308
                    },
                    {
                        "names": [
                            "k8s.gcr.io/etcd:3.5.3-0"
                        ],
                        "sizeBytes": 81114891
                    },
                    {
                        "names": [
                            "docker.io/library/import-2022-09-22@sha256:3f1719db7992cd328812b73bbba6128e7061de18381f1fe1eba82a42bf736bb8",
                            "k8s.gcr.io/kube-apiserver:v1.24.6"
                        ],
                        "sizeBytes": 75522530
                    },
                    {
                        "names": [
                            "docker.io/library/import-2022-09-22@sha256:469392d73897e7b3d74f94229fbf402f6fc2dcebeec00871262ecc41d3843f24",
                            "k8s.gcr.io/kube-controller-manager:v1.24.6"
                        ],
                        "sizeBytes": 63856756
                    },
                    {
                        "names": [
                            "docker.io/library/import-2022-09-22@sha256:a636c918bb1e6618b5c538b291a3c4fcb88c78a404d951e9f278b2e96259d1a7",
                            "k8s.gcr.io/kube-scheduler:v1.24.6"
                        ],
                        "sizeBytes": 51404916
                    },
                    {
                        "names": [
                            "docker.io/kindest/kindnetd:v20220726-ed811e41"
                        ],
                        "sizeBytes": 23675326
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-provisioner:v0.0.22-kind.0"
                        ],
                        "sizeBytes": 15578330
                    },
                    {
                        "names": [
                            "k8s.gcr.io/coredns/coredns:v1.8.6"
                        ],
                        "sizeBytes": 12317707
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-helper:v20220607-9a4d8d2a"
                        ],
                        "sizeBytes": 2749880
                    },
                    {
                        "names": [
                            "k8s.gcr.io/pause@sha256:bb6ed397957e9ca7c65ada0db5c5d1c707c9c8afc80a94acbe69f3ae76988f0c",
                            "k8s.gcr.io/pause:3.7",
                            "registry.k8s.io/pause:3.7"
                        ],
                        "sizeBytes": 268400
                    }
                ]
            }
        }
    ]
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "491"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-6d4b75cb6d-7kg86.172a579f8fed8b4f",
                "namespace": "kube-system",
                "uid": "91bdd328-80d4-4110-8c54-53081b3e46d4",
                "resourceVersion": "384",
                "creationTimestamp": "2022-11-23T22:35:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-6d4b75cb6d-7kg86",
                "uid": "ea4a51c3-0cdc-4d62-a782-7c7a9963392d",
                "apiVersion": "v1",
                "resourceVersion": "377"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-11-23T22:35:54Z",
            "lastTimestamp": "2022-11-23T22:35:54Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-6d4b75cb6d-7kg86.172a57a0d38b42bd",
                "namespace": "kube-system",
                "uid": "22203167-0d80-46db-a0da-3a6f97a4f823",
                "resourceVersion": "419",
                "creationTimestamp": "2022-11-23T22:36:00Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-6d4b75cb6d-7kg86",
                "uid": "ea4a51c3-0cdc-4d62-a782-7c7a9963392d",
                "apiVersion": "v1",
                "resourceVersion": "386"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/coredns-6d4b75cb6d-7kg86 to local-test-control-plane",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-11-23T22:36:00Z",
            "lastTimestamp": "2022-11-23T22:36:00Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-6d4b75cb6d-7kg86.172a57a107f551da",
                "namespace": "kube-system",
                "uid": "333ac95e-0bc6-4449-9421-ac1177ad341a",
                "resourceVersion": "426",
                "creationTimestamp": "2022-11-23T22:36:01Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-6d4b75cb6d-7kg86",
                "uid": "ea4a51c3-0cdc-4d62-a782-7c7a9963392d",
                "apiVersion": "v1",
                "resourceVersion": "413",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Pulled",
            "message": "Container image \"k8s.gcr.io/coredns/coredns:v1.8.6\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "local-test-control-plane"
            },
            "firstTimestamp": "2022-11-23T22:36:01Z",
            "lastTimestamp": "2022-11-23T22:36:01Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-6d4b75cb6d-7kg86.172a57a121dcc344",
                "namespace": "kube-system",
                "uid": "740441b2-0eeb-479c-93f1-b8ae7b10bdbb",
                "resourceVersion": "428",
                "creationTimestamp": "2022-11-23T22:36:01Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-6d4b75cb6d-7kg86",
                "uid": "ea4a51c3-0cdc-4d62-a782-7c7a9963392d",
                "apiVersion": "v1",
                "resourceVersion": "413",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Created",
            "message": "Created container coredns",
            "source": {
                "component": "kubelet",
                "host": "local-test-control-plane"
            },
            "firstTimestamp": "2022-11-23T22:36:01Z",
            "lastTimestamp": "2022-11-23T22:36:01Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-6d4b75cb6d-7kg86.172a57a12a00910b",
                "namespace": "kube-system",
                "uid": "c35f8b65-8076-4989-bd28-ea9693c47e18",
                "resourceVersion": "431",
                "creationTimestamp": "2022-11-23T22:36:01Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-6d4b75cb6d-7kg86",
                "uid": "ea4a51c3-0cdc-4d62-a782-7c7a9963392d",
                "apiVersion": "v1",
                "resourceVersion": "413",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Started",
            "message": "Started container coredns",
            "source": {
                "component": "kubelet",
                "host": "local-test-control-plane"
            },
            "firstTimestamp": "2022-11-23T22:36:01Z",
            "lastTimestamp": "2022-11-23T22:36:01Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-6d4b75cb6d-d8cv8.172a579f8f5e3e40",
                "namespace": "kube-system",
                "uid": "eeda67fd-9a4c-4b6a-9353-d6ef83b76023",
                "resourceVersion": "374",
                "creationTimestamp": "2022-11-23T22:35:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-6d4b75cb6d-d8cv8",
                "uid": "ab4a61e9-f4e1-4a27-a488-a288820981d1",
                "apiVersion": "v1",
                "resourceVersion": "373"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-11-23T22:35:54Z",
            "lastTimestamp": "2022-11-23T22:35:54Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-6d4b75cb6d-d8cv8.172a57a0d38b1b83",
                "namespace": "kube-system",
                "uid": "fd1788ec-ea5a-4ab5-9508-cb9e08d99e22",
                "resourceVersion": "418",
                "creationTimestamp": "2022-11-23T22:36:00Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-6d4b75cb6d-d8cv8",
                "uid": "ab4a61e9-f4e1-4a27-a488-a288820981d1",
                "apiVersion": "v1",
                "resourceVersion": "376"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/coredns-6d4b75cb6d-d8cv8 to local-test-control-plane",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-11-23T22:36:00Z",
            "lastTimestamp": "2022-11-23T22:36:00Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-6d4b75cb6d-d8cv8.172a57a0f1ff17d0",
                "namespace": "kube-system",
                "uid": "f21f77f3-bfc2-4ee2-9b37-d6041c7b085f",
                "resourceVersion": "422",
                "creationTimestamp": "2022-11-23T22:36:00Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-6d4b75cb6d-d8cv8",
                "uid": "ab4a61e9-f4e1-4a27-a488-a288820981d1",
                "apiVersion": "v1",
                "resourceVersion": "415",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Pulled",
            "message": "Container image \"k8s.gcr.io/coredns/coredns:v1.8.6\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "local-test-control-plane"
            },
            "firstTimestamp": "2022-11-23T22:36:00Z",
            "lastTimestamp": "2022-11-23T22:36:00Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-6d4b75cb6d-d8cv8.172a57a123c2c31e",
                "namespace": "kube-system",
                "uid": "30629c92-ef4f-40fb-bbb3-451e1cba6626",
                "resourceVersion": "429",
                "creationTimestamp": "2022-11-23T22:36:01Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-6d4b75cb6d-d8cv8",
                "uid": "ab4a61e9-f4e1-4a27-a488-a288820981d1",
                "apiVersion": "v1",
                "resourceVersion": "415",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Created",
            "message": "Created container coredns",
            "source": {
                "component": "kubelet",
                "host": "local-test-control-plane"
            },
            "firstTimestamp": "2022-11-23T22:36:01Z",
            "lastTimestamp": "2022-11-23T22:36:01Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-6d4b75cb6d-d8cv8.172a57a129a90fad",
                "namespace": "kube-system",
                "uid": "603f15dd-3293-443f-a25c-86d713415501",
                "resourceVersion": "430",
                "creationTimestamp": "2022-11-23T22:36:01Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-6d4b75cb6d-d8cv8",
                "uid": "ab4a61e9-f4e1-4a27-a488-a288820981d1",
                "apiVersion": "v1",
                "resourceVersion": "415",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Started",
            "message": "Started container coredns",
            "source": {
                "component": "kubelet",
                "host": "local-test-control-plane"
            },
            "firstTimestamp": "2022-11-23T22:36:01Z",
            "lastTimestamp": "2022-11-23T22:36:01Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-6d4b75cb6d.172a579f8f5bcde7",
                "namespace": "kube-system",
                "uid": "8d0f6c49-1d23-4851-a30c-ee01a3d0775d",
                "resourceVersion": "378",
                "creationTimestamp": "2022-11-23T22:35:54Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "coredns-6d4b75cb6d",
                "uid": "8b96987e-54ab-47bc-b762-2cb100b0ffbe",
                "apiVersion": "apps/v1",
                "resourceVersion": "331"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: coredns-6d4b75cb6d-d8cv8",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2022-11-23T22:35:54Z",
            "lastTimestamp": "2022-11-23T22:35:54Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-6d4b75cb6d.172a579f8fb63cf2",
                "namespace": "kube-system",
                "uid": "46211549-6f93-4826-a152-38a7c9df818e",
                "resourceVersion": "382",
                "creationTimestamp": "2022-11-23T22:35:54Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "coredns-6d4b75cb6d",
                "uid": "8b96987e-54ab-47bc-b762-2cb100b0ffbe",
                "apiVersion": "apps/v1",
                "resourceVersion": "331"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: coredns-6d4b75cb6d-7kg86",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2022-11-23T22:35:54Z",
            "lastTimestamp": "2022-11-23T22:35:54Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns.172a579f6e9025fa",
                "namespace": "kube-system",
                "uid": "392e239d-5398-489b-8701-8faf1148ec29",
                "resourceVersion": "334",
                "creationTimestamp": "2022-11-23T22:35:54Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "kube-system",
                "name": "coredns",
                "uid": "6a87dcc8-267f-46b3-ab46-69b1cd53a7e8",
                "apiVersion": "apps/v1",
                "resourceVersion": "227"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set coredns-6d4b75cb6d to 2",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2022-11-23T22:35:54Z",
            "lastTimestamp": "2022-11-23T22:35:54Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-tnc2g.172a579f8d1eedd0",
                "namespace": "kube-system",
                "uid": "0f33550e-31ad-4d9d-a459-95023bb4a814",
                "resourceVersion": "370",
                "creationTimestamp": "2022-11-23T22:35:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-tnc2g",
                "uid": "beb9a5be-d39f-42c5-999b-c7b3b070deb9",
                "apiVersion": "v1",
                "resourceVersion": "361"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kindnet-tnc2g to local-test-control-plane",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-11-23T22:35:54Z",
            "lastTimestamp": "2022-11-23T22:35:54Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-tnc2g.172a579fa7081608",
                "namespace": "kube-system",
                "uid": "8133d95e-d549-40ac-945d-708721e7c3c4",
                "resourceVersion": "393",
                "creationTimestamp": "2022-11-23T22:35:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-tnc2g",
                "uid": "beb9a5be-d39f-42c5-999b-c7b3b070deb9",
                "apiVersion": "v1",
                "resourceVersion": "368",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Pulled",
            "message": "Container image \"docker.io/kindest/kindnetd:v20220726-ed811e41\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "local-test-control-plane"
            },
            "firstTimestamp": "2022-11-23T22:35:55Z",
            "lastTimestamp": "2022-11-23T22:35:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-tnc2g.172a579fc9d7586c",
                "namespace": "kube-system",
                "uid": "44ab8989-f7b6-4367-9f0a-80eb2ced52b9",
                "resourceVersion": "396",
                "creationTimestamp": "2022-11-23T22:35:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-tnc2g",
                "uid": "beb9a5be-d39f-42c5-999b-c7b3b070deb9",
                "apiVersion": "v1",
                "resourceVersion": "368",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Created",
            "message": "Created container kindnet-cni",
            "source": {
                "component": "kubelet",
                "host": "local-test-control-plane"
            },
            "firstTimestamp": "2022-11-23T22:35:55Z",
            "lastTimestamp": "2022-11-23T22:35:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-tnc2g.172a579fd8b9325d",
                "namespace": "kube-system",
                "uid": "a6660860-2890-42ad-b3be-1c0c7bd6af6c",
                "resourceVersion": "399",
                "creationTimestamp": "2022-11-23T22:35:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-tnc2g",
                "uid": "beb9a5be-d39f-42c5-999b-c7b3b070deb9",
                "apiVersion": "v1",
                "resourceVersion": "368",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Started",
            "message": "Started container kindnet-cni",
            "source": {
                "component": "kubelet",
                "host": "local-test-control-plane"
            },
            "firstTimestamp": "2022-11-23T22:35:55Z",
            "lastTimestamp": "2022-11-23T22:35:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet.172a579f8c5c31c3",
                "namespace": "kube-system",
                "uid": "8e55580c-a65e-472f-a8b9-3d464bce64a1",
                "resourceVersion": "363",
                "creationTimestamp": "2022-11-23T22:35:54Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kindnet",
                "uid": "d66ed196-15a7-4f91-8d1e-55a85272c8c4",
                "apiVersion": "apps/v1",
                "resourceVersion": "251"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kindnet-tnc2g",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2022-11-23T22:35:54Z",
            "lastTimestamp": "2022-11-23T22:35:54Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-controller-manager.172a579c4edd9ff8",
                "namespace": "kube-system",
                "uid": "5803a2a4-ee36-4b0e-9fb2-d443e8452350",
                "resourceVersion": "260",
                "creationTimestamp": "2022-11-23T22:35:40Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "kube-controller-manager",
                "uid": "3a0f6a65-432d-4d6a-b7b4-60f9aacf7950",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "259"
            },
            "reason": "LeaderElection",
            "message": "local-test-control-plane_be097610-54b7-4781-9133-e7682e54a124 became leader",
            "source": {
                "component": "kube-controller-manager"
            },
            "firstTimestamp": "2022-11-23T22:35:40Z",
            "lastTimestamp": "2022-11-23T22:35:40Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-cftfc.172a579f8cfd50ac",
                "namespace": "kube-system",
                "uid": "bd8a5e04-a4fb-40f5-8f5e-9a3856352e02",
                "resourceVersion": "369",
                "creationTimestamp": "2022-11-23T22:35:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-cftfc",
                "uid": "6dec808a-97c5-45be-865d-323da50c0bc0",
                "apiVersion": "v1",
                "resourceVersion": "362"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kube-proxy-cftfc to local-test-control-plane",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-11-23T22:35:54Z",
            "lastTimestamp": "2022-11-23T22:35:54Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-cftfc.172a579fa787ff26",
                "namespace": "kube-system",
                "uid": "94602b21-81be-4c63-8556-23cbcd3ca3d0",
                "resourceVersion": "394",
                "creationTimestamp": "2022-11-23T22:35:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-cftfc",
                "uid": "6dec808a-97c5-45be-865d-323da50c0bc0",
                "apiVersion": "v1",
                "resourceVersion": "365",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"k8s.gcr.io/kube-proxy:v1.24.6\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "local-test-control-plane"
            },
            "firstTimestamp": "2022-11-23T22:35:55Z",
            "lastTimestamp": "2022-11-23T22:35:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-cftfc.172a579fc6ef8fbb",
                "namespace": "kube-system",
                "uid": "eaa03faf-18c3-4963-9cb0-2698652a7743",
                "resourceVersion": "395",
                "creationTimestamp": "2022-11-23T22:35:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-cftfc",
                "uid": "6dec808a-97c5-45be-865d-323da50c0bc0",
                "apiVersion": "v1",
                "resourceVersion": "365",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "local-test-control-plane"
            },
            "firstTimestamp": "2022-11-23T22:35:55Z",
            "lastTimestamp": "2022-11-23T22:35:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-cftfc.172a579fce007999",
                "namespace": "kube-system",
                "uid": "4e230a71-7b1f-41d1-bf5b-59834bea58a6",
                "resourceVersion": "397",
                "creationTimestamp": "2022-11-23T22:35:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-cftfc",
                "uid": "6dec808a-97c5-45be-865d-323da50c0bc0",
                "apiVersion": "v1",
                "resourceVersion": "365",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "local-test-control-plane"
            },
            "firstTimestamp": "2022-11-23T22:35:55Z",
            "lastTimestamp": "2022-11-23T22:35:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy.172a579f8c97b8dc",
                "namespace": "kube-system",
                "uid": "a80771eb-59ee-4080-b534-3e99e7d58ce3",
                "resourceVersion": "367",
                "creationTimestamp": "2022-11-23T22:35:54Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kube-proxy",
                "uid": "6d6c1092-0fac-4252-8d9b-f4b982f8d703",
                "apiVersion": "apps/v1",
                "resourceVersion": "232"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kube-proxy-cftfc",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2022-11-23T22:35:54Z",
            "lastTimestamp": "2022-11-23T22:35:54Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-scheduler.172a579c55a54ca7",
                "namespace": "kube-system",
                "uid": "4e04b232-6375-4eb9-986b-6fc172b1ec53",
                "resourceVersion": "265",
                "creationTimestamp": "2022-11-23T22:35:40Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "kube-scheduler",
                "uid": "ec61063f-59f2-4ba8-9902-fc0b9520deff",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "263"
            },
            "reason": "LeaderElection",
            "message": "local-test-control-plane_03dc1396-74b3-46fc-9cc9-412f4c2b2bdd became leader",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2022-11-23T22:35:40Z",
            "lastTimestamp": "2022-11-23T22:35:40Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "491"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "491"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "uid": "6c82c62e-e637-492c-b5a2-a80206d0f491",
                "resourceVersion": "229",
                "creationTimestamp": "2022-11-23T22:35:39Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "metrics",
                        "protocol": "TCP",
                        "port": 9153,
                        "targetPort": 9153
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "10.96.0.10",
                "clusterIPs": [
                    "10.96.0.10"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "491"
    },
    "items": [
        {
            "metadata": {
                "name": "kindnet",
                "namespace": "kube-system",
                "uid": "d66ed196-15a7-4f91-8d1e-55a85272c8c4",
                "resourceVersion": "401",
                "generation": 1,
                "creationTimestamp": "2022-11-23T22:35:40Z",
                "labels": {
                    "app": "kindnet",
                    "k8s-app": "kindnet",
                    "tier": "node"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "kindnet"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "kindnet",
                            "k8s-app": "kindnet",
                            "tier": "node"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "cni-cfg",
                                "hostPath": {
                                    "path": "/etc/cni/net.d",
                                    "type": ""
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kindnet-cni",
                                "image": "docker.io/kindest/kindnetd:v20220726-ed811e41",
                                "env": [
                                    {
                                        "name": "HOST_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_SUBNET",
                                        "value": "10.244.0.0/16"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "50Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "50Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "cni-cfg",
                                        "mountPath": "/etc/cni/net.d"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_RAW",
                                            "NET_ADMIN"
                                        ]
                                    },
                                    "privileged": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "kindnet",
                        "serviceAccount": "kindnet",
                        "hostNetwork": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 1,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 1,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1,
                "numberAvailable": 1
            }
        },
        {
            "metadata": {
                "name": "kube-proxy",
                "namespace": "kube-system",
                "uid": "6d6c1092-0fac-4252-8d9b-f4b982f8d703",
                "resourceVersion": "403",
                "generation": 1,
                "creationTimestamp": "2022-11-23T22:35:39Z",
                "labels": {
                    "k8s-app": "kube-proxy"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-proxy"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-proxy"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kube-proxy",
                                "configMap": {
                                    "name": "kube-proxy",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kube-proxy",
                                "image": "k8s.gcr.io/kube-proxy:v1.24.6",
                                "command": [
                                    "/usr/local/bin/kube-proxy",
                                    "--config=/var/lib/kube-proxy/config.conf",
                                    "--hostname-override=$(NODE_NAME)"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "kube-proxy",
                                        "mountPath": "/var/lib/kube-proxy"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kube-proxy",
                        "serviceAccount": "kube-proxy",
                        "hostNetwork": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 1,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 1,
                "numberReady": 1,
                "observedGeneration": 1,
                "updatedNumberScheduled": 1,
                "numberAvailable": 1
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "491"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "uid": "6a87dcc8-267f-46b3-ab46-69b1cd53a7e8",
                "resourceVersion": "450",
                "generation": 1,
                "creationTimestamp": "2022-11-23T22:35:39Z",
                "labels": {
                    "k8s-app": "kube-dns"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "k8s.gcr.io/coredns/coredns:v1.8.6",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2022-11-23T22:36:02Z",
                        "lastTransitionTime": "2022-11-23T22:36:02Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2022-11-23T22:36:02Z",
                        "lastTransitionTime": "2022-11-23T22:35:54Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"coredns-6d4b75cb6d\" has successfully progressed."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "491"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-6d4b75cb6d",
                "namespace": "kube-system",
                "uid": "8b96987e-54ab-47bc-b762-2cb100b0ffbe",
                "resourceVersion": "449",
                "generation": 1,
                "creationTimestamp": "2022-11-23T22:35:54Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "6d4b75cb6d"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "6a87dcc8-267f-46b3-ab46-69b1cd53a7e8",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "6d4b75cb6d"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "6d4b75cb6d"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "k8s.gcr.io/coredns/coredns:v1.8.6",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "491"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-6d4b75cb6d-7kg86",
                "generateName": "coredns-6d4b75cb6d-",
                "namespace": "kube-system",
                "uid": "ea4a51c3-0cdc-4d62-a782-7c7a9963392d",
                "resourceVersion": "443",
                "creationTimestamp": "2022-11-23T22:35:54Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "6d4b75cb6d"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-6d4b75cb6d",
                        "uid": "8b96987e-54ab-47bc-b762-2cb100b0ffbe",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-dvs85",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "k8s.gcr.io/coredns/coredns:v1.8.6",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-dvs85",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "local-test-control-plane",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:36:00Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:36:02Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:36:02Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:36:00Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "10.244.0.4",
                "podIPs": [
                    {
                        "ip": "10.244.0.4"
                    }
                ],
                "startTime": "2022-11-23T22:36:00Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2022-11-23T22:36:01Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "k8s.gcr.io/coredns/coredns:v1.8.6",
                        "imageID": "sha256:edaa71f2aee883484133da046954ad70fd6bf1fa42e5aec3f7dae199c626299c",
                        "containerID": "containerd://63d9c76ab8feaa7402001c1d90f5ad70d7b24c2387ab96956ab00e7fe3831a17",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-6d4b75cb6d-d8cv8",
                "generateName": "coredns-6d4b75cb6d-",
                "namespace": "kube-system",
                "uid": "ab4a61e9-f4e1-4a27-a488-a288820981d1",
                "resourceVersion": "442",
                "creationTimestamp": "2022-11-23T22:35:54Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "6d4b75cb6d"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-6d4b75cb6d",
                        "uid": "8b96987e-54ab-47bc-b762-2cb100b0ffbe",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-k242k",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "k8s.gcr.io/coredns/coredns:v1.8.6",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-k242k",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "local-test-control-plane",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:36:00Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:36:02Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:36:02Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:36:00Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "10.244.0.2",
                "podIPs": [
                    {
                        "ip": "10.244.0.2"
                    }
                ],
                "startTime": "2022-11-23T22:36:00Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2022-11-23T22:36:01Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "k8s.gcr.io/coredns/coredns:v1.8.6",
                        "imageID": "sha256:edaa71f2aee883484133da046954ad70fd6bf1fa42e5aec3f7dae199c626299c",
                        "containerID": "containerd://79db95d442d8cc8ac4f46877610ef3f017fa9663c4f640b3bd150f366ea5d595",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "etcd-local-test-control-plane",
                "namespace": "kube-system",
                "uid": "6f8ce05a-c945-4757-805b-e6aa843c55b3",
                "resourceVersion": "328",
                "creationTimestamp": "2022-11-23T22:35:39Z",
                "labels": {
                    "component": "etcd",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/etcd.advertise-client-urls": "https://172.18.0.2:2379",
                    "kubernetes.io/config.hash": "38021711ff50abd4f17793a0dbc0ca2b",
                    "kubernetes.io/config.mirror": "38021711ff50abd4f17793a0dbc0ca2b",
                    "kubernetes.io/config.seen": "2022-11-23T22:35:39.446720107Z",
                    "kubernetes.io/config.source": "file",
                    "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "local-test-control-plane",
                        "uid": "3e5417dc-fe49-4b11-abf7-afdb9e35354c",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "etcd-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etcd-data",
                        "hostPath": {
                            "path": "/var/lib/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "etcd",
                        "image": "k8s.gcr.io/etcd:3.5.3-0",
                        "command": [
                            "etcd",
                            "--advertise-client-urls=https://172.18.0.2:2379",
                            "--cert-file=/etc/kubernetes/pki/etcd/server.crt",
                            "--client-cert-auth=true",
                            "--data-dir=/var/lib/etcd",
                            "--experimental-initial-corrupt-check=true",
                            "--initial-advertise-peer-urls=https://172.18.0.2:2380",
                            "--initial-cluster=local-test-control-plane=https://172.18.0.2:2380",
                            "--key-file=/etc/kubernetes/pki/etcd/server.key",
                            "--listen-client-urls=https://127.0.0.1:2379,https://172.18.0.2:2379",
                            "--listen-metrics-urls=http://127.0.0.1:2381",
                            "--listen-peer-urls=https://172.18.0.2:2380",
                            "--name=local-test-control-plane",
                            "--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt",
                            "--peer-client-cert-auth=true",
                            "--peer-key-file=/etc/kubernetes/pki/etcd/peer.key",
                            "--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt",
                            "--snapshot-count=10000",
                            "--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m",
                                "memory": "100Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "etcd-data",
                                "mountPath": "/var/lib/etcd"
                            },
                            {
                                "name": "etcd-certs",
                                "mountPath": "/etc/kubernetes/pki/etcd"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "local-test-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:35:40Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:35:53Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:35:53Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:35:40Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2022-11-23T22:35:40Z",
                "containerStatuses": [
                    {
                        "name": "etcd",
                        "state": {
                            "running": {
                                "startedAt": "2022-11-23T22:35:34Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "k8s.gcr.io/etcd:3.5.3-0",
                        "imageID": "sha256:a9a710bb96df080e6b9c720eb85dc5b832ff84abf77263548d74fedec6466a5a",
                        "containerID": "containerd://90fdab5bdd212b69dc526ee92e1cc96c165aa96dbcdf23ba0a4e2c1434ad74cd",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kindnet-tnc2g",
                "generateName": "kindnet-",
                "namespace": "kube-system",
                "uid": "beb9a5be-d39f-42c5-999b-c7b3b070deb9",
                "resourceVersion": "400",
                "creationTimestamp": "2022-11-23T22:35:54Z",
                "labels": {
                    "app": "kindnet",
                    "controller-revision-hash": "8648f4dfc",
                    "k8s-app": "kindnet",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kindnet",
                        "uid": "d66ed196-15a7-4f91-8d1e-55a85272c8c4",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-cfg",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-qj7zp",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kindnet-cni",
                        "image": "docker.io/kindest/kindnetd:v20220726-ed811e41",
                        "env": [
                            {
                                "name": "HOST_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_SUBNET",
                                "value": "10.244.0.0/16"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-cfg",
                                "mountPath": "/etc/cni/net.d"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-qj7zp",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_RAW",
                                    "NET_ADMIN"
                                ]
                            },
                            "privileged": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "kindnet",
                "serviceAccount": "kindnet",
                "nodeName": "local-test-control-plane",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "local-test-control-plane"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:35:54Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:35:56Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:35:56Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:35:54Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2022-11-23T22:35:54Z",
                "containerStatuses": [
                    {
                        "name": "kindnet-cni",
                        "state": {
                            "running": {
                                "startedAt": "2022-11-23T22:35:55Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "docker.io/kindest/kindnetd:v20220726-ed811e41",
                        "imageID": "sha256:823f482c52727695497adcf5b3048bfd55264c61cb9e27d6dbd9c346c5bea737",
                        "containerID": "containerd://88f53fe6df0c73ddd653858188d69a05fb952df13d5fade453898b9e3b699163",
                        "started": true
                    }
                ],
                "qosClass": "Guaranteed"
            }
        },
        {
            "metadata": {
                "name": "kube-apiserver-local-test-control-plane",
                "namespace": "kube-system",
                "uid": "5cfc4841-af7c-4e03-8668-391411fca4f9",
                "resourceVersion": "300",
                "creationTimestamp": "2022-11-23T22:35:39Z",
                "labels": {
                    "component": "kube-apiserver",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint": "172.18.0.2:6443",
                    "kubernetes.io/config.hash": "306def00e3bf4a3ad938868e3355b5f0",
                    "kubernetes.io/config.mirror": "306def00e3bf4a3ad938868e3355b5f0",
                    "kubernetes.io/config.seen": "2022-11-23T22:35:39.446722940Z",
                    "kubernetes.io/config.source": "file",
                    "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "local-test-control-plane",
                        "uid": "3e5417dc-fe49-4b11-abf7-afdb9e35354c",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-apiserver",
                        "image": "k8s.gcr.io/kube-apiserver:v1.24.6",
                        "command": [
                            "kube-apiserver",
                            "--advertise-address=172.18.0.2",
                            "--allow-privileged=true",
                            "--authorization-mode=Node,RBAC",
                            "--client-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--enable-admission-plugins=NodeRestriction",
                            "--enable-bootstrap-token-auth=true",
                            "--etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt",
                            "--etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt",
                            "--etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key",
                            "--etcd-servers=https://127.0.0.1:2379",
                            "--kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt",
                            "--kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key",
                            "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                            "--proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt",
                            "--proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key",
                            "--requestheader-allowed-names=front-proxy-client",
                            "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
                            "--requestheader-extra-headers-prefix=X-Remote-Extra-",
                            "--requestheader-group-headers=X-Remote-Group",
                            "--requestheader-username-headers=X-Remote-User",
                            "--secure-port=6443",
                            "--service-account-issuer=https://kubernetes.default.svc.cluster.local",
                            "--service-account-key-file=/etc/kubernetes/pki/sa.pub",
                            "--service-account-signing-key-file=/etc/kubernetes/pki/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/12",
                            "--tls-cert-file=/etc/kubernetes/pki/apiserver.crt",
                            "--tls-private-key-file=/etc/kubernetes/pki/apiserver.key"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "250m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/pki"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 6443,
                                "host": "172.18.0.2",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": 6443,
                                "host": "172.18.0.2",
                                "scheme": "HTTPS"
                            },
                            "timeoutSeconds": 15,
                            "periodSeconds": 1,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 6443,
                                "host": "172.18.0.2",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "local-test-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:35:40Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:35:43Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:35:43Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:35:40Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2022-11-23T22:35:40Z",
                "containerStatuses": [
                    {
                        "name": "kube-apiserver",
                        "state": {
                            "running": {
                                "startedAt": "2022-11-23T22:35:33Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "k8s.gcr.io/kube-apiserver:v1.24.6",
                        "imageID": "docker.io/library/import-2022-09-22@sha256:3f1719db7992cd328812b73bbba6128e7061de18381f1fe1eba82a42bf736bb8",
                        "containerID": "containerd://8e5cf58253a1eb0a54bb9b98f635d74c26fddd6a9aef9ef0b299065fc06e3715",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-controller-manager-local-test-control-plane",
                "namespace": "kube-system",
                "uid": "fa90709a-7aa8-4a04-962d-2514fd0a436e",
                "resourceVersion": "302",
                "creationTimestamp": "2022-11-23T22:35:39Z",
                "labels": {
                    "component": "kube-controller-manager",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "bf8e9aee9cdbb620e2e490add7c42b14",
                    "kubernetes.io/config.mirror": "bf8e9aee9cdbb620e2e490add7c42b14",
                    "kubernetes.io/config.seen": "2022-11-23T22:35:39.446723524Z",
                    "kubernetes.io/config.source": "file",
                    "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "local-test-control-plane",
                        "uid": "3e5417dc-fe49-4b11-abf7-afdb9e35354c",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "flexvolume-dir",
                        "hostPath": {
                            "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/controller-manager.conf",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-controller-manager",
                        "image": "k8s.gcr.io/kube-controller-manager:v1.24.6",
                        "command": [
                            "kube-controller-manager",
                            "--allocate-node-cidrs=true",
                            "--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--bind-address=127.0.0.1",
                            "--client-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--cluster-cidr=10.244.0.0/16",
                            "--cluster-name=local-test",
                            "--cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt",
                            "--cluster-signing-key-file=/etc/kubernetes/pki/ca.key",
                            "--controllers=*,bootstrapsigner,tokencleaner",
                            "--enable-hostpath-provisioner=true",
                            "--kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--leader-elect=true",
                            "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
                            "--root-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--service-account-private-key-file=/etc/kubernetes/pki/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/12",
                            "--use-service-account-credentials=true"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "200m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "flexvolume-dir",
                                "mountPath": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/pki"
                            },
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/controller-manager.conf"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "local-test-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:35:41Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:35:44Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:35:44Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:35:41Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2022-11-23T22:35:41Z",
                "containerStatuses": [
                    {
                        "name": "kube-controller-manager",
                        "state": {
                            "running": {
                                "startedAt": "2022-11-23T22:35:33Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "k8s.gcr.io/kube-controller-manager:v1.24.6",
                        "imageID": "docker.io/library/import-2022-09-22@sha256:469392d73897e7b3d74f94229fbf402f6fc2dcebeec00871262ecc41d3843f24",
                        "containerID": "containerd://c504d125af0e311e6c9cbf74e9c4e1d65dda0d62a67a558d986b88022e847a0b",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-cftfc",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "6dec808a-97c5-45be-865d-323da50c0bc0",
                "resourceVersion": "402",
                "creationTimestamp": "2022-11-23T22:35:54Z",
                "labels": {
                    "controller-revision-hash": "6b79f6db76",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "6d6c1092-0fac-4252-8d9b-f4b982f8d703",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-dgjwv",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "k8s.gcr.io/kube-proxy:v1.24.6",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-dgjwv",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "local-test-control-plane",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "local-test-control-plane"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:35:54Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:35:56Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:35:56Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:35:54Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2022-11-23T22:35:54Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2022-11-23T22:35:55Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "k8s.gcr.io/kube-proxy:v1.24.6",
                        "imageID": "docker.io/library/import-2022-09-22@sha256:b973aa6d9144f3a18886ff8a132d22b751d11aa40e658dc33e8a475b2cb09f66",
                        "containerID": "containerd://990eaf0494cdf046a15c739aece9a16f8a5309b1f5601d10883281b4aae5e967",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-scheduler-local-test-control-plane",
                "namespace": "kube-system",
                "uid": "62696176-423e-4001-bdb5-8152e0f00771",
                "resourceVersion": "306",
                "creationTimestamp": "2022-11-23T22:35:39Z",
                "labels": {
                    "component": "kube-scheduler",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "d0ca5af0e286e4e6d78d22a1cb066e18",
                    "kubernetes.io/config.mirror": "d0ca5af0e286e4e6d78d22a1cb066e18",
                    "kubernetes.io/config.seen": "2022-11-23T22:35:39.446723940Z",
                    "kubernetes.io/config.source": "file",
                    "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "local-test-control-plane",
                        "uid": "3e5417dc-fe49-4b11-abf7-afdb9e35354c",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/scheduler.conf",
                            "type": "FileOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-scheduler",
                        "image": "k8s.gcr.io/kube-scheduler:v1.24.6",
                        "command": [
                            "kube-scheduler",
                            "--authentication-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--bind-address=127.0.0.1",
                            "--kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--leader-elect=true"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/scheduler.conf"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "local-test-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:35:40Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:35:47Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:35:47Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-11-23T22:35:40Z"
                    }
                ],
                "hostIP": "172.18.0.2",
                "podIP": "172.18.0.2",
                "podIPs": [
                    {
                        "ip": "172.18.0.2"
                    }
                ],
                "startTime": "2022-11-23T22:35:40Z",
                "containerStatuses": [
                    {
                        "name": "kube-scheduler",
                        "state": {
                            "running": {
                                "startedAt": "2022-11-23T22:35:33Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "k8s.gcr.io/kube-scheduler:v1.24.6",
                        "imageID": "docker.io/library/import-2022-09-22@sha256:a636c918bb1e6618b5c538b291a3c4fcb88c78a404d951e9f278b2e96259d1a7",
                        "containerID": "containerd://58dafb598874f553c21dda7be2a7d047a87a9d1ada6333d7d1c42910d2a59dc1",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        }
    ]
}
==== START logs for container coredns of pod kube-system/coredns-6d4b75cb6d-7kg86 ====
.:53
[INFO] plugin/reload: Running configuration MD5 = db32ca3650231d74073ff4cf814959a7
CoreDNS-1.8.6
linux/arm64, go1.17.1, 13a9191
==== END logs for container coredns of pod kube-system/coredns-6d4b75cb6d-7kg86 ====
==== START logs for container coredns of pod kube-system/coredns-6d4b75cb6d-d8cv8 ====
.:53
[INFO] plugin/reload: Running configuration MD5 = db32ca3650231d74073ff4cf814959a7
CoreDNS-1.8.6
linux/arm64, go1.17.1, 13a9191
==== END logs for container coredns of pod kube-system/coredns-6d4b75cb6d-d8cv8 ====
==== START logs for container etcd of pod kube-system/etcd-local-test-control-plane ====
{"level":"warn","ts":"2022-11-23T22:35:34.954Z","caller":"flags/flag.go:93","msg":"unrecognized environment variable","environment-variable":"ETCD_UNSUPPORTED_ARCH=arm64"}
{"level":"info","ts":"2022-11-23T22:35:34.954Z","caller":"etcdmain/etcd.go:73","msg":"Running: ","args":["etcd","--advertise-client-urls=https://172.18.0.2:2379","--cert-file=/etc/kubernetes/pki/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/etcd","--experimental-initial-corrupt-check=true","--initial-advertise-peer-urls=https://172.18.0.2:2380","--initial-cluster=local-test-control-plane=https://172.18.0.2:2380","--key-file=/etc/kubernetes/pki/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://172.18.0.2:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://172.18.0.2:2380","--name=local-test-control-plane","--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/etc/kubernetes/pki/etcd/peer.key","--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt","--snapshot-count=10000","--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt"]}
{"level":"info","ts":"2022-11-23T22:35:34.954Z","caller":"embed/etcd.go:131","msg":"configuring peer listeners","listen-peer-urls":["https://172.18.0.2:2380"]}
{"level":"info","ts":"2022-11-23T22:35:34.954Z","caller":"embed/etcd.go:479","msg":"starting with peer TLS","tls-info":"cert = /etc/kubernetes/pki/etcd/peer.crt, key = /etc/kubernetes/pki/etcd/peer.key, client-cert=, client-key=, trusted-ca = /etc/kubernetes/pki/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2022-11-23T22:35:34.954Z","caller":"embed/etcd.go:139","msg":"configuring client listeners","listen-client-urls":["https://127.0.0.1:2379","https://172.18.0.2:2379"]}
{"level":"info","ts":"2022-11-23T22:35:34.954Z","caller":"embed/etcd.go:308","msg":"starting an etcd server","etcd-version":"3.5.3","git-sha":"0452feec7","go-version":"go1.16.2","go-os":"linux","go-arch":"arm64","max-cpu-set":2,"max-cpu-available":2,"member-initialized":false,"name":"local-test-control-plane","data-dir":"/var/lib/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://172.18.0.2:2380"],"listen-peer-urls":["https://172.18.0.2:2380"],"advertise-client-urls":["https://172.18.0.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://172.18.0.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"local-test-control-plane=https://172.18.0.2:2380","initial-cluster-state":"new","initial-cluster-token":"etcd-cluster","quota-size-bytes":2147483648,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2022-11-23T22:35:34.956Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/etcd/member/snap/db","took":"1.425125ms"}
{"level":"info","ts":"2022-11-23T22:35:34.958Z","caller":"etcdserver/raft.go:448","msg":"starting local member","local-member-id":"e58c878e0e01014","cluster-id":"c74448475845f0fb"}
{"level":"info","ts":"2022-11-23T22:35:34.958Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 switched to configuration voters=()"}
{"level":"info","ts":"2022-11-23T22:35:34.958Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 became follower at term 0"}
{"level":"info","ts":"2022-11-23T22:35:34.958Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft e58c878e0e01014 [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]"}
{"level":"info","ts":"2022-11-23T22:35:34.958Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 became follower at term 1"}
{"level":"info","ts":"2022-11-23T22:35:34.958Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 switched to configuration voters=(1033796535975940116)"}
{"level":"warn","ts":"2022-11-23T22:35:34.962Z","caller":"auth/store.go:1220","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2022-11-23T22:35:34.962Z","caller":"mvcc/kvstore.go:415","msg":"kvstore restored","current-rev":1}
{"level":"info","ts":"2022-11-23T22:35:34.963Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2022-11-23T22:35:34.963Z","caller":"etcdserver/server.go:851","msg":"starting etcd server","local-member-id":"e58c878e0e01014","local-server-version":"3.5.3","cluster-version":"to_be_decided"}
{"level":"info","ts":"2022-11-23T22:35:34.963Z","caller":"etcdserver/server.go:736","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"e58c878e0e01014","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2022-11-23T22:35:34.964Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 switched to configuration voters=(1033796535975940116)"}
{"level":"info","ts":"2022-11-23T22:35:34.964Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"c74448475845f0fb","local-member-id":"e58c878e0e01014","added-peer-id":"e58c878e0e01014","added-peer-peer-urls":["https://172.18.0.2:2380"]}
{"level":"info","ts":"2022-11-23T22:35:34.965Z","caller":"embed/etcd.go:688","msg":"starting with client TLS","tls-info":"cert = /etc/kubernetes/pki/etcd/server.crt, key = /etc/kubernetes/pki/etcd/server.key, client-cert=, client-key=, trusted-ca = /etc/kubernetes/pki/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2022-11-23T22:35:34.965Z","caller":"embed/etcd.go:581","msg":"serving peer traffic","address":"172.18.0.2:2380"}
{"level":"info","ts":"2022-11-23T22:35:34.965Z","caller":"embed/etcd.go:277","msg":"now serving peer/client/metrics","local-member-id":"e58c878e0e01014","initial-advertise-peer-urls":["https://172.18.0.2:2380"],"listen-peer-urls":["https://172.18.0.2:2380"],"advertise-client-urls":["https://172.18.0.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://172.18.0.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2022-11-23T22:35:34.965Z","caller":"embed/etcd.go:763","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2022-11-23T22:35:34.965Z","caller":"embed/etcd.go:553","msg":"cmux::serve","address":"172.18.0.2:2380"}
{"level":"info","ts":"2022-11-23T22:35:35.259Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 is starting a new election at term 1"}
{"level":"info","ts":"2022-11-23T22:35:35.259Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 became pre-candidate at term 1"}
{"level":"info","ts":"2022-11-23T22:35:35.260Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 received MsgPreVoteResp from e58c878e0e01014 at term 1"}
{"level":"info","ts":"2022-11-23T22:35:35.260Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 became candidate at term 2"}
{"level":"info","ts":"2022-11-23T22:35:35.260Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 received MsgVoteResp from e58c878e0e01014 at term 2"}
{"level":"info","ts":"2022-11-23T22:35:35.260Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"e58c878e0e01014 became leader at term 2"}
{"level":"info","ts":"2022-11-23T22:35:35.260Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: e58c878e0e01014 elected leader e58c878e0e01014 at term 2"}
{"level":"info","ts":"2022-11-23T22:35:35.260Z","caller":"etcdserver/server.go:2042","msg":"published local member to cluster through raft","local-member-id":"e58c878e0e01014","local-member-attributes":"{Name:local-test-control-plane ClientURLs:[https://172.18.0.2:2379]}","request-path":"/0/members/e58c878e0e01014/attributes","cluster-id":"c74448475845f0fb","publish-timeout":"7s"}
{"level":"info","ts":"2022-11-23T22:35:35.260Z","caller":"embed/serve.go:98","msg":"ready to serve client requests"}
{"level":"info","ts":"2022-11-23T22:35:35.261Z","caller":"embed/serve.go:98","msg":"ready to serve client requests"}
{"level":"info","ts":"2022-11-23T22:35:35.262Z","caller":"embed/serve.go:188","msg":"serving client traffic securely","address":"172.18.0.2:2379"}
{"level":"info","ts":"2022-11-23T22:35:35.262Z","caller":"embed/serve.go:188","msg":"serving client traffic securely","address":"127.0.0.1:2379"}
{"level":"info","ts":"2022-11-23T22:35:35.262Z","caller":"etcdserver/server.go:2507","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2022-11-23T22:35:35.262Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2022-11-23T22:35:35.262Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2022-11-23T22:35:35.262Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"c74448475845f0fb","local-member-id":"e58c878e0e01014","cluster-version":"3.5"}
{"level":"info","ts":"2022-11-23T22:35:35.262Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2022-11-23T22:35:35.262Z","caller":"etcdserver/server.go:2531","msg":"cluster version is updated","cluster-version":"3.5"}
{"level":"info","ts":"2022-11-23T22:36:00.873Z","caller":"traceutil/trace.go:171","msg":"trace[378609456] transaction","detail":"{read_only:false; response_revision:423; number_of_response:1; }","duration":"199.697667ms","start":"2022-11-23T22:36:00.673Z","end":"2022-11-23T22:36:00.873Z","steps":["trace[378609456] 'process raft request'  (duration: 127.999667ms)","trace[378609456] 'compare'  (duration: 71.451417ms)"],"step_count":2}
==== END logs for container etcd of pod kube-system/etcd-local-test-control-plane ====
==== START logs for container kindnet-cni of pod kube-system/kindnet-tnc2g ====
I1123 22:35:56.122011       1 main.go:102] connected to apiserver: https://10.96.0.1:443
I1123 22:35:56.122047       1 main.go:107] hostIP = 172.18.0.2
podIP = 172.18.0.2
I1123 22:35:56.122099       1 main.go:116] setting mtu 1500 for CNI 
I1123 22:35:56.122108       1 main.go:146] kindnetd IP family: "ipv4"
I1123 22:35:56.122113       1 main.go:150] noMask IPv4 subnets: [10.244.0.0/16]
I1123 22:35:56.235276       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I1123 22:35:56.235296       1 main.go:227] handling current node
I1123 22:36:06.341599       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I1123 22:36:06.341619       1 main.go:227] handling current node
I1123 22:36:16.362438       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I1123 22:36:16.362458       1 main.go:227] handling current node
I1123 22:36:26.375697       1 main.go:223] Handling node with IPs: map[172.18.0.2:{}]
I1123 22:36:26.375719       1 main.go:227] handling current node
==== END logs for container kindnet-cni of pod kube-system/kindnet-tnc2g ====
==== START logs for container kube-apiserver of pod kube-system/kube-apiserver-local-test-control-plane ====
I1123 22:35:33.717173       1 server.go:558] external host was not specified, using 172.18.0.2
I1123 22:35:33.730656       1 server.go:158] Version: v1.24.6
I1123 22:35:33.731056       1 server.go:160] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I1123 22:35:33.992611       1 shared_informer.go:255] Waiting for caches to sync for node_authorizer
I1123 22:35:34.001032       1 plugins.go:158] Loaded 12 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,RuntimeClass,DefaultIngressClass,MutatingAdmissionWebhook.
I1123 22:35:34.001092       1 plugins.go:161] Loaded 11 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,PodSecurity,Priority,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,CertificateSubjectRestriction,ValidatingAdmissionWebhook,ResourceQuota.
I1123 22:35:34.011711       1 plugins.go:158] Loaded 12 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,RuntimeClass,DefaultIngressClass,MutatingAdmissionWebhook.
I1123 22:35:34.011772       1 plugins.go:161] Loaded 11 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,PodSecurity,Priority,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,CertificateSubjectRestriction,ValidatingAdmissionWebhook,ResourceQuota.
W1123 22:35:34.013609       1 clientconn.go:1331] [core] grpc: addrConn.createTransport failed to connect to {127.0.0.1:2379 127.0.0.1 <nil> 0 <nil>}. Err: connection error: desc = "transport: Error while dialing dial tcp 127.0.0.1:2379: connect: connection refused". Reconnecting...
W1123 22:35:35.295975       1 genericapiserver.go:557] Skipping API apiextensions.k8s.io/v1beta1 because it has no resources.
I1123 22:35:35.296766       1 instance.go:274] Using reconciler: lease
I1123 22:35:35.423463       1 instance.go:586] API group "internal.apiserver.k8s.io" is not enabled, skipping.
W1123 22:35:35.744241       1 genericapiserver.go:557] Skipping API authentication.k8s.io/v1beta1 because it has no resources.
W1123 22:35:35.745530       1 genericapiserver.go:557] Skipping API authorization.k8s.io/v1beta1 because it has no resources.
W1123 22:35:35.759023       1 genericapiserver.go:557] Skipping API certificates.k8s.io/v1beta1 because it has no resources.
W1123 22:35:35.759874       1 genericapiserver.go:557] Skipping API coordination.k8s.io/v1beta1 because it has no resources.
W1123 22:35:35.762518       1 genericapiserver.go:557] Skipping API networking.k8s.io/v1beta1 because it has no resources.
W1123 22:35:35.763720       1 genericapiserver.go:557] Skipping API node.k8s.io/v1alpha1 because it has no resources.
W1123 22:35:35.766242       1 genericapiserver.go:557] Skipping API rbac.authorization.k8s.io/v1beta1 because it has no resources.
W1123 22:35:35.766254       1 genericapiserver.go:557] Skipping API rbac.authorization.k8s.io/v1alpha1 because it has no resources.
W1123 22:35:35.766856       1 genericapiserver.go:557] Skipping API scheduling.k8s.io/v1beta1 because it has no resources.
W1123 22:35:35.766866       1 genericapiserver.go:557] Skipping API scheduling.k8s.io/v1alpha1 because it has no resources.
W1123 22:35:35.769032       1 genericapiserver.go:557] Skipping API storage.k8s.io/v1alpha1 because it has no resources.
W1123 22:35:35.771204       1 genericapiserver.go:557] Skipping API flowcontrol.apiserver.k8s.io/v1alpha1 because it has no resources.
W1123 22:35:35.773473       1 genericapiserver.go:557] Skipping API apps/v1beta2 because it has no resources.
W1123 22:35:35.773484       1 genericapiserver.go:557] Skipping API apps/v1beta1 because it has no resources.
W1123 22:35:35.774460       1 genericapiserver.go:557] Skipping API admissionregistration.k8s.io/v1beta1 because it has no resources.
I1123 22:35:35.776457       1 plugins.go:158] Loaded 12 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,RuntimeClass,DefaultIngressClass,MutatingAdmissionWebhook.
I1123 22:35:35.776464       1 plugins.go:161] Loaded 11 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,PodSecurity,Priority,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,CertificateSubjectRestriction,ValidatingAdmissionWebhook,ResourceQuota.
W1123 22:35:35.787139       1 genericapiserver.go:557] Skipping API apiregistration.k8s.io/v1beta1 because it has no resources.
I1123 22:35:36.616333       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I1123 22:35:36.616477       1 secure_serving.go:210] Serving securely on [::]:6443
I1123 22:35:36.616505       1 dynamic_serving_content.go:132] "Starting controller" name="serving-cert::/etc/kubernetes/pki/apiserver.crt::/etc/kubernetes/pki/apiserver.key"
I1123 22:35:36.630405       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I1123 22:35:36.630460       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
I1123 22:35:36.630730       1 autoregister_controller.go:141] Starting autoregister controller
I1123 22:35:36.630783       1 cache.go:32] Waiting for caches to sync for autoregister controller
I1123 22:35:36.630859       1 available_controller.go:491] Starting AvailableConditionController
I1123 22:35:36.630890       1 cache.go:32] Waiting for caches to sync for AvailableConditionController controller
I1123 22:35:36.630912       1 controller.go:83] Starting OpenAPI AggregationController
I1123 22:35:36.631585       1 apiservice_controller.go:97] Starting APIServiceRegistrationController
I1123 22:35:36.631619       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I1123 22:35:36.631823       1 apf_controller.go:317] Starting API Priority and Fairness config controller
I1123 22:35:36.649595       1 controller.go:80] Starting OpenAPI V3 AggregationController
I1123 22:35:36.649759       1 customresource_discovery_controller.go:209] Starting DiscoveryController
I1123 22:35:36.649815       1 dynamic_serving_content.go:132] "Starting controller" name="aggregator-proxy-cert::/etc/kubernetes/pki/front-proxy-client.crt::/etc/kubernetes/pki/front-proxy-client.key"
I1123 22:35:36.650973       1 crdregistration_controller.go:111] Starting crd-autoregister controller
I1123 22:35:36.651019       1 shared_informer.go:255] Waiting for caches to sync for crd-autoregister
I1123 22:35:36.704799       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
I1123 22:35:36.722483       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I1123 22:35:36.731442       1 cluster_authentication_trust_controller.go:440] Starting cluster_authentication_trust_controller controller
I1123 22:35:36.731460       1 shared_informer.go:255] Waiting for caches to sync for cluster_authentication_trust_controller
I1123 22:35:36.731485       1 controller.go:85] Starting OpenAPI controller
I1123 22:35:36.731504       1 controller.go:85] Starting OpenAPI V3 controller
I1123 22:35:36.731523       1 naming_controller.go:291] Starting NamingConditionController
I1123 22:35:36.731538       1 establishing_controller.go:76] Starting EstablishingController
I1123 22:35:36.731552       1 nonstructuralschema_controller.go:192] Starting NonStructuralSchemaConditionController
I1123 22:35:36.731571       1 apiapproval_controller.go:186] Starting KubernetesAPIApprovalPolicyConformantConditionController
I1123 22:35:36.731609       1 crd_finalizer.go:266] Starting CRDFinalizer
I1123 22:35:36.751074       1 shared_informer.go:262] Caches are synced for crd-autoregister
I1123 22:35:36.766561       1 controller.go:611] quota admission added evaluator for: namespaces
I1123 22:35:36.793628       1 shared_informer.go:262] Caches are synced for node_authorizer
I1123 22:35:36.831133       1 cache.go:39] Caches are synced for AvailableConditionController controller
I1123 22:35:36.831146       1 cache.go:39] Caches are synced for autoregister controller
I1123 22:35:36.831481       1 shared_informer.go:262] Caches are synced for cluster_authentication_trust_controller
I1123 22:35:36.831648       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I1123 22:35:36.831841       1 apf_controller.go:322] Running API Priority and Fairness config worker
I1123 22:35:37.457990       1 controller.go:132] OpenAPI AggregationController: action for item k8s_internal_local_delegation_chain_0000000000: Nothing (removed from the queue).
I1123 22:35:37.634203       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I1123 22:35:37.636654       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I1123 22:35:37.636969       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I1123 22:35:37.766095       1 controller.go:611] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I1123 22:35:37.778870       1 controller.go:611] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I1123 22:35:37.869846       1 alloc.go:327] "allocated clusterIPs" service="default/kubernetes" clusterIPs=map[IPv4:10.96.0.1]
W1123 22:35:37.871878       1 lease.go:234] Resetting endpoints for master service "kubernetes" to [172.18.0.2]
I1123 22:35:37.872289       1 controller.go:611] quota admission added evaluator for: endpoints
I1123 22:35:37.873724       1 controller.go:611] quota admission added evaluator for: endpointslices.discovery.k8s.io
I1123 22:35:39.380145       1 controller.go:611] quota admission added evaluator for: serviceaccounts
I1123 22:35:39.383112       1 controller.go:611] quota admission added evaluator for: deployments.apps
I1123 22:35:39.386107       1 alloc.go:327] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs=map[IPv4:10.96.0.10]
I1123 22:35:39.404581       1 controller.go:611] quota admission added evaluator for: daemonsets.apps
I1123 22:35:39.480878       1 controller.go:611] quota admission added evaluator for: leases.coordination.k8s.io
I1123 22:35:54.156118       1 controller.go:611] quota admission added evaluator for: replicasets.apps
I1123 22:35:54.657178       1 controller.go:611] quota admission added evaluator for: controllerrevisions.apps
I1123 22:35:55.844042       1 controller.go:611] quota admission added evaluator for: events.events.k8s.io
==== END logs for container kube-apiserver of pod kube-system/kube-apiserver-local-test-control-plane ====
==== START logs for container kube-controller-manager of pod kube-system/kube-controller-manager-local-test-control-plane ====
I1123 22:35:34.381885       1 serving.go:348] Generated self-signed cert in-memory
I1123 22:35:34.795725       1 controllermanager.go:180] Version: v1.24.6
I1123 22:35:34.795782       1 controllermanager.go:182] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I1123 22:35:34.796611       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I1123 22:35:34.796745       1 secure_serving.go:210] Serving securely on 127.0.0.1:10257
I1123 22:35:34.796910       1 leaderelection.go:248] attempting to acquire leader lease kube-system/kube-controller-manager...
I1123 22:35:34.797652       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I1123 22:35:34.797718       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
E1123 22:35:36.706282       1 leaderelection.go:330] error retrieving resource lock kube-system/kube-controller-manager: leases.coordination.k8s.io "kube-controller-manager" is forbidden: User "system:kube-controller-manager" cannot get resource "leases" in API group "coordination.k8s.io" in the namespace "kube-system"
I1123 22:35:40.743873       1 leaderelection.go:258] successfully acquired lease kube-system/kube-controller-manager
I1123 22:35:40.744678       1 event.go:294] "Event occurred" object="kube-system/kube-controller-manager" fieldPath="" kind="Lease" apiVersion="coordination.k8s.io/v1" type="Normal" reason="LeaderElection" message="local-test-control-plane_be097610-54b7-4781-9133-e7682e54a124 became leader"
I1123 22:35:40.848978       1 shared_informer.go:255] Waiting for caches to sync for tokens
I1123 22:35:40.854275       1 controllermanager.go:593] Started "ttl-after-finished"
I1123 22:35:40.854441       1 ttlafterfinished_controller.go:109] Starting TTL after finished controller
I1123 22:35:40.854455       1 shared_informer.go:255] Waiting for caches to sync for TTL after finished
I1123 22:35:40.859683       1 controllermanager.go:593] Started "endpoint"
I1123 22:35:40.859905       1 endpoints_controller.go:178] Starting endpoint controller
I1123 22:35:40.859940       1 shared_informer.go:255] Waiting for caches to sync for endpoint
I1123 22:35:40.863088       1 controllermanager.go:593] Started "endpointslicemirroring"
I1123 22:35:40.863210       1 endpointslicemirroring_controller.go:212] Starting EndpointSliceMirroring controller
I1123 22:35:40.863231       1 shared_informer.go:255] Waiting for caches to sync for endpoint_slice_mirroring
I1123 22:35:40.865917       1 controllermanager.go:593] Started "serviceaccount"
I1123 22:35:40.866040       1 serviceaccounts_controller.go:117] Starting service account controller
I1123 22:35:40.866077       1 shared_informer.go:255] Waiting for caches to sync for service account
I1123 22:35:40.869231       1 controllermanager.go:593] Started "daemonset"
I1123 22:35:40.869331       1 daemon_controller.go:284] Starting daemon sets controller
I1123 22:35:40.869344       1 shared_informer.go:255] Waiting for caches to sync for daemon sets
I1123 22:35:40.871722       1 controllermanager.go:593] Started "ttl"
I1123 22:35:40.871780       1 ttl_controller.go:121] Starting TTL controller
I1123 22:35:40.871789       1 shared_informer.go:255] Waiting for caches to sync for TTL
E1123 22:35:40.874043       1 core.go:91] Failed to start service controller: WARNING: no cloud provider provided, services of type LoadBalancer will fail
W1123 22:35:40.874089       1 controllermanager.go:571] Skipping "service"
I1123 22:35:40.876534       1 controllermanager.go:593] Started "clusterrole-aggregation"
I1123 22:35:40.876580       1 clusterroleaggregation_controller.go:194] Starting ClusterRoleAggregator
I1123 22:35:40.876588       1 shared_informer.go:255] Waiting for caches to sync for ClusterRoleAggregator
I1123 22:35:40.879056       1 controllermanager.go:593] Started "bootstrapsigner"
I1123 22:35:40.879146       1 shared_informer.go:255] Waiting for caches to sync for bootstrap_signer
I1123 22:35:40.882203       1 controllermanager.go:593] Started "persistentvolume-expander"
I1123 22:35:40.882235       1 expand_controller.go:341] Starting expand controller
I1123 22:35:40.882239       1 shared_informer.go:255] Waiting for caches to sync for expand
I1123 22:35:40.950102       1 shared_informer.go:262] Caches are synced for tokens
I1123 22:35:41.000761       1 controllermanager.go:593] Started "pv-protection"
I1123 22:35:41.000917       1 pv_protection_controller.go:79] Starting PV protection controller
I1123 22:35:41.000951       1 shared_informer.go:255] Waiting for caches to sync for PV protection
I1123 22:35:41.306353       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for replicasets.apps
I1123 22:35:41.306377       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for rolebindings.rbac.authorization.k8s.io
I1123 22:35:41.306389       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for statefulsets.apps
I1123 22:35:41.306396       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for ingresses.networking.k8s.io
I1123 22:35:41.306404       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for jobs.batch
I1123 22:35:41.306410       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for endpointslices.discovery.k8s.io
I1123 22:35:41.306431       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for podtemplates
I1123 22:35:41.306442       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for deployments.apps
I1123 22:35:41.306448       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for horizontalpodautoscalers.autoscaling
W1123 22:35:41.306470       1 shared_informer.go:533] resyncPeriod 18h55m42.035637011s is smaller than resyncCheckPeriod 22h47m55.922325103s and the informer has already started. Changing it to 22h47m55.922325103s
I1123 22:35:41.306488       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for serviceaccounts
I1123 22:35:41.306546       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for cronjobs.batch
I1123 22:35:41.306558       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for networkpolicies.networking.k8s.io
I1123 22:35:41.306567       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for csistoragecapacities.storage.k8s.io
I1123 22:35:41.306581       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for leases.coordination.k8s.io
W1123 22:35:41.306589       1 shared_informer.go:533] resyncPeriod 13h6m4.456705205s is smaller than resyncCheckPeriod 22h47m55.922325103s and the informer has already started. Changing it to 22h47m55.922325103s
I1123 22:35:41.306600       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for limitranges
I1123 22:35:41.306639       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for roles.rbac.authorization.k8s.io
I1123 22:35:41.306650       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for events.events.k8s.io
I1123 22:35:41.306666       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for poddisruptionbudgets.policy
I1123 22:35:41.306677       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for endpoints
I1123 22:35:41.306683       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for daemonsets.apps
I1123 22:35:41.306693       1 resource_quota_monitor.go:233] QuotaMonitor created object count evaluator for controllerrevisions.apps
I1123 22:35:41.306700       1 controllermanager.go:593] Started "resourcequota"
I1123 22:35:41.306754       1 resource_quota_controller.go:273] Starting resource quota controller
I1123 22:35:41.306762       1 shared_informer.go:255] Waiting for caches to sync for resource quota
I1123 22:35:41.306779       1 resource_quota_monitor.go:308] QuotaMonitor running
I1123 22:35:41.451057       1 controllermanager.go:593] Started "deployment"
I1123 22:35:41.451102       1 deployment_controller.go:153] "Starting controller" controller="deployment"
I1123 22:35:41.451109       1 shared_informer.go:255] Waiting for caches to sync for deployment
I1123 22:35:41.601913       1 controllermanager.go:593] Started "replicaset"
I1123 22:35:41.602050       1 replica_set.go:205] Starting replicaset controller
I1123 22:35:41.602060       1 shared_informer.go:255] Waiting for caches to sync for ReplicaSet
I1123 22:35:41.751616       1 controllermanager.go:593] Started "csrapproving"
I1123 22:35:41.751825       1 certificate_controller.go:119] Starting certificate controller "csrapproving"
I1123 22:35:41.751855       1 shared_informer.go:255] Waiting for caches to sync for certificate-csrapproving
I1123 22:35:41.900680       1 controllermanager.go:593] Started "attachdetach"
I1123 22:35:41.900764       1 attach_detach_controller.go:328] Starting attach detach controller
I1123 22:35:41.900775       1 shared_informer.go:255] Waiting for caches to sync for attach detach
I1123 22:35:42.155437       1 controllermanager.go:593] Started "namespace"
I1123 22:35:42.155501       1 namespace_controller.go:200] Starting namespace controller
I1123 22:35:42.155525       1 shared_informer.go:255] Waiting for caches to sync for namespace
I1123 22:35:42.401315       1 controllermanager.go:593] Started "garbagecollector"
I1123 22:35:42.401491       1 garbagecollector.go:149] Starting garbage collector controller
I1123 22:35:42.401501       1 shared_informer.go:255] Waiting for caches to sync for garbage collector
I1123 22:35:42.401525       1 graph_builder.go:289] GraphBuilder running
I1123 22:35:42.450793       1 controllermanager.go:593] Started "csrsigning"
W1123 22:35:42.450809       1 core.go:225] configure-cloud-routes is set, but no cloud provider specified. Will not configure cloud provider routes.
W1123 22:35:42.450813       1 controllermanager.go:571] Skipping "route"
I1123 22:35:42.450847       1 certificate_controller.go:119] Starting certificate controller "csrsigning-legacy-unknown"
I1123 22:35:42.450859       1 shared_informer.go:255] Waiting for caches to sync for certificate-csrsigning-legacy-unknown
I1123 22:35:42.450879       1 certificate_controller.go:119] Starting certificate controller "csrsigning-kubelet-serving"
I1123 22:35:42.450886       1 shared_informer.go:255] Waiting for caches to sync for certificate-csrsigning-kubelet-serving
I1123 22:35:42.450899       1 certificate_controller.go:119] Starting certificate controller "csrsigning-kubelet-client"
I1123 22:35:42.450906       1 shared_informer.go:255] Waiting for caches to sync for certificate-csrsigning-kubelet-client
I1123 22:35:42.450917       1 certificate_controller.go:119] Starting certificate controller "csrsigning-kube-apiserver-client"
I1123 22:35:42.450920       1 shared_informer.go:255] Waiting for caches to sync for certificate-csrsigning-kube-apiserver-client
I1123 22:35:42.450938       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I1123 22:35:42.450992       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I1123 22:35:42.469487       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I1123 22:35:42.469530       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I1123 22:35:42.701180       1 controllermanager.go:593] Started "root-ca-cert-publisher"
I1123 22:35:42.701218       1 publisher.go:107] Starting root CA certificate configmap publisher
I1123 22:35:42.701246       1 shared_informer.go:255] Waiting for caches to sync for crt configmap
I1123 22:35:42.851491       1 controllermanager.go:593] Started "replicationcontroller"
I1123 22:35:42.851525       1 replica_set.go:205] Starting replicationcontroller controller
I1123 22:35:42.851530       1 shared_informer.go:255] Waiting for caches to sync for ReplicationController
I1123 22:35:43.000963       1 controllermanager.go:593] Started "job"
I1123 22:35:43.001026       1 job_controller.go:184] Starting job controller
I1123 22:35:43.001036       1 shared_informer.go:255] Waiting for caches to sync for job
I1123 22:35:43.151473       1 controllermanager.go:593] Started "tokencleaner"
I1123 22:35:43.151513       1 tokencleaner.go:118] Starting token cleaner controller
I1123 22:35:43.151518       1 shared_informer.go:255] Waiting for caches to sync for token_cleaner
I1123 22:35:43.151523       1 shared_informer.go:262] Caches are synced for token_cleaner
I1123 22:35:43.301655       1 node_ipam_controller.go:91] Sending events to api server.
I1123 22:35:53.311947       1 range_allocator.go:83] Sending events to api server.
I1123 22:35:53.312014       1 range_allocator.go:117] No Secondary Service CIDR provided. Skipping filtering out secondary service addresses.
I1123 22:35:53.312031       1 controllermanager.go:593] Started "nodeipam"
I1123 22:35:53.312083       1 node_ipam_controller.go:154] Starting ipam controller
I1123 22:35:53.312089       1 shared_informer.go:255] Waiting for caches to sync for node
I1123 22:35:53.314540       1 controllermanager.go:593] Started "endpointslice"
I1123 22:35:53.314564       1 endpointslice_controller.go:257] Starting endpoint slice controller
I1123 22:35:53.314661       1 shared_informer.go:255] Waiting for caches to sync for endpoint_slice
I1123 22:35:53.316762       1 controllermanager.go:593] Started "cronjob"
I1123 22:35:53.316833       1 cronjob_controllerv2.go:135] "Starting cronjob controller v2"
I1123 22:35:53.316845       1 shared_informer.go:255] Waiting for caches to sync for cronjob
I1123 22:35:53.317432       1 node_lifecycle_controller.go:77] Sending events to api server
E1123 22:35:53.317447       1 core.go:211] failed to start cloud node lifecycle controller: no cloud provider provided
W1123 22:35:53.317451       1 controllermanager.go:571] Skipping "cloud-node-lifecycle"
I1123 22:35:53.319389       1 controllermanager.go:593] Started "ephemeral-volume"
I1123 22:35:53.319465       1 controller.go:170] Starting ephemeral volume controller
I1123 22:35:53.319473       1 shared_informer.go:255] Waiting for caches to sync for ephemeral
I1123 22:35:53.321935       1 controllermanager.go:593] Started "disruption"
I1123 22:35:53.322018       1 disruption.go:363] Starting disruption controller
I1123 22:35:53.322038       1 shared_informer.go:255] Waiting for caches to sync for disruption
I1123 22:35:53.323829       1 controllermanager.go:593] Started "statefulset"
I1123 22:35:53.323898       1 stateful_set.go:147] Starting stateful set controller
I1123 22:35:53.323912       1 shared_informer.go:255] Waiting for caches to sync for stateful set
I1123 22:35:53.324406       1 controllermanager.go:593] Started "csrcleaner"
I1123 22:35:53.324458       1 cleaner.go:82] Starting CSR cleaner controller
I1123 22:35:53.324986       1 node_lifecycle_controller.go:377] Sending events to api server.
I1123 22:35:53.325046       1 taint_manager.go:163] "Sending events to api server"
I1123 22:35:53.325068       1 node_lifecycle_controller.go:505] Controller will reconcile labels.
I1123 22:35:53.325096       1 controllermanager.go:593] Started "nodelifecycle"
I1123 22:35:53.325133       1 node_lifecycle_controller.go:539] Starting node controller
I1123 22:35:53.325139       1 shared_informer.go:255] Waiting for caches to sync for taint
I1123 22:35:53.326886       1 controllermanager.go:593] Started "podgc"
I1123 22:35:53.326973       1 gc_controller.go:92] Starting GC controller
I1123 22:35:53.326985       1 shared_informer.go:255] Waiting for caches to sync for GC
I1123 22:35:53.329984       1 controllermanager.go:593] Started "horizontalpodautoscaling"
I1123 22:35:53.330020       1 horizontal.go:168] Starting HPA controller
I1123 22:35:53.330028       1 shared_informer.go:255] Waiting for caches to sync for HPA
I1123 22:35:53.453819       1 controllermanager.go:593] Started "persistentvolume-binder"
I1123 22:35:53.453902       1 pv_controller_base.go:311] Starting persistent volume controller
I1123 22:35:53.453929       1 shared_informer.go:255] Waiting for caches to sync for persistent volume
I1123 22:35:53.603158       1 controllermanager.go:593] Started "pvc-protection"
I1123 22:35:53.604023       1 shared_informer.go:255] Waiting for caches to sync for resource quota
I1123 22:35:53.604051       1 pvc_protection_controller.go:103] "Starting PVC protection controller"
I1123 22:35:53.604059       1 shared_informer.go:255] Waiting for caches to sync for PVC protection
I1123 22:35:53.613169       1 shared_informer.go:262] Caches are synced for node
I1123 22:35:53.613270       1 range_allocator.go:173] Starting range CIDR allocator
I1123 22:35:53.613304       1 shared_informer.go:255] Waiting for caches to sync for cidrallocator
I1123 22:35:53.613330       1 shared_informer.go:262] Caches are synced for cidrallocator
W1123 22:35:53.613457       1 actual_state_of_world.go:541] Failed to update statusUpdateNeeded field in actual state of world: Failed to set statusUpdateNeeded to needed true, because nodeName="local-test-control-plane" does not exist
I1123 22:35:53.615843       1 shared_informer.go:262] Caches are synced for endpoint_slice
I1123 22:35:53.617691       1 shared_informer.go:262] Caches are synced for cronjob
I1123 22:35:53.617859       1 range_allocator.go:374] Set node local-test-control-plane PodCIDR to [10.244.0.0/24]
I1123 22:35:53.619961       1 shared_informer.go:262] Caches are synced for ephemeral
I1123 22:35:53.620823       1 shared_informer.go:255] Waiting for caches to sync for garbage collector
I1123 22:35:53.622328       1 shared_informer.go:262] Caches are synced for disruption
I1123 22:35:53.622351       1 disruption.go:371] Sending events to api server.
I1123 22:35:53.624752       1 shared_informer.go:262] Caches are synced for stateful set
I1123 22:35:53.628004       1 shared_informer.go:262] Caches are synced for GC
I1123 22:35:53.630221       1 shared_informer.go:262] Caches are synced for HPA
I1123 22:35:53.651445       1 shared_informer.go:262] Caches are synced for certificate-csrsigning-kube-apiserver-client
I1123 22:35:53.651516       1 shared_informer.go:262] Caches are synced for certificate-csrsigning-legacy-unknown
I1123 22:35:53.651532       1 shared_informer.go:262] Caches are synced for certificate-csrsigning-kubelet-serving
I1123 22:35:53.651543       1 shared_informer.go:262] Caches are synced for ReplicationController
I1123 22:35:53.651561       1 shared_informer.go:262] Caches are synced for certificate-csrsigning-kubelet-client
I1123 22:35:53.651655       1 shared_informer.go:262] Caches are synced for deployment
I1123 22:35:53.651994       1 shared_informer.go:262] Caches are synced for certificate-csrapproving
I1123 22:35:53.654220       1 shared_informer.go:262] Caches are synced for persistent volume
I1123 22:35:53.655475       1 shared_informer.go:262] Caches are synced for TTL after finished
I1123 22:35:53.656598       1 shared_informer.go:262] Caches are synced for namespace
I1123 22:35:53.660775       1 shared_informer.go:262] Caches are synced for endpoint
I1123 22:35:53.663968       1 shared_informer.go:262] Caches are synced for endpoint_slice_mirroring
I1123 22:35:53.667160       1 shared_informer.go:262] Caches are synced for service account
I1123 22:35:53.672498       1 shared_informer.go:262] Caches are synced for TTL
I1123 22:35:53.676650       1 shared_informer.go:262] Caches are synced for ClusterRoleAggregator
I1123 22:35:53.679796       1 shared_informer.go:262] Caches are synced for bootstrap_signer
I1123 22:35:53.683010       1 shared_informer.go:262] Caches are synced for expand
I1123 22:35:53.701015       1 shared_informer.go:262] Caches are synced for PV protection
I1123 22:35:53.701082       1 shared_informer.go:262] Caches are synced for job
I1123 22:35:53.702149       1 shared_informer.go:262] Caches are synced for ReplicaSet
I1123 22:35:53.702165       1 shared_informer.go:262] Caches are synced for crt configmap
I1123 22:35:53.704178       1 shared_informer.go:262] Caches are synced for PVC protection
I1123 22:35:53.869697       1 shared_informer.go:262] Caches are synced for daemon sets
I1123 22:35:53.901052       1 shared_informer.go:262] Caches are synced for attach detach
I1123 22:35:53.904309       1 shared_informer.go:262] Caches are synced for resource quota
I1123 22:35:53.907283       1 shared_informer.go:262] Caches are synced for resource quota
I1123 22:35:53.925227       1 shared_informer.go:262] Caches are synced for taint
I1123 22:35:53.925370       1 taint_manager.go:187] "Starting NoExecuteTaintManager"
I1123 22:35:53.925520       1 node_lifecycle_controller.go:1399] Initializing eviction metric for zone: 
W1123 22:35:53.925607       1 node_lifecycle_controller.go:1014] Missing timestamp for Node local-test-control-plane. Assuming now as a timestamp.
I1123 22:35:53.925658       1 node_lifecycle_controller.go:1165] Controller detected that all Nodes are not-Ready. Entering master disruption mode.
I1123 22:35:53.925686       1 event.go:294] "Event occurred" object="local-test-control-plane" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node local-test-control-plane event: Registered Node local-test-control-plane in Controller"
I1123 22:35:54.157713       1 event.go:294] "Event occurred" object="local-path-storage/local-path-provisioner" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set local-path-provisioner-6b84c5c67f to 1"
I1123 22:35:54.160654       1 event.go:294] "Event occurred" object="kube-system/coredns" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set coredns-6d4b75cb6d to 2"
I1123 22:35:54.320985       1 shared_informer.go:262] Caches are synced for garbage collector
I1123 22:35:54.402044       1 shared_informer.go:262] Caches are synced for garbage collector
I1123 22:35:54.402153       1 garbagecollector.go:158] Garbage collector: all resource monitors have synced. Proceeding to collect garbage
I1123 22:35:54.660604       1 event.go:294] "Event occurred" object="kube-system/kindnet" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kindnet-tnc2g"
I1123 22:35:54.664531       1 event.go:294] "Event occurred" object="kube-system/kube-proxy" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kube-proxy-cftfc"
I1123 22:35:54.710963       1 event.go:294] "Event occurred" object="kube-system/coredns-6d4b75cb6d" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-6d4b75cb6d-d8cv8"
I1123 22:35:54.716942       1 event.go:294] "Event occurred" object="kube-system/coredns-6d4b75cb6d" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-6d4b75cb6d-7kg86"
I1123 22:35:54.716965       1 event.go:294] "Event occurred" object="local-path-storage/local-path-provisioner-6b84c5c67f" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: local-path-provisioner-6b84c5c67f-9xh77"
I1123 22:36:03.927232       1 node_lifecycle_controller.go:1192] Controller detected that some Nodes are Ready. Exiting master disruption mode.
==== END logs for container kube-controller-manager of pod kube-system/kube-controller-manager-local-test-control-plane ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-cftfc ====
I1123 22:35:55.813739       1 node.go:163] Successfully retrieved node IP: 172.18.0.2
I1123 22:35:55.813815       1 server_others.go:138] "Detected node IP" address="172.18.0.2"
I1123 22:35:55.813871       1 server_others.go:578] "Unknown proxy mode, assuming iptables proxy" proxyMode=""
I1123 22:35:55.838108       1 server_others.go:206] "Using iptables Proxier"
I1123 22:35:55.838128       1 server_others.go:213] "kube-proxy running in dual-stack mode" ipFamily=IPv4
I1123 22:35:55.838132       1 server_others.go:214] "Creating dualStackProxier for iptables"
I1123 22:35:55.838140       1 server_others.go:501] "Detect-local-mode set to ClusterCIDR, but no IPv6 cluster CIDR defined, , defaulting to no-op detect-local for IPv6"
I1123 22:35:55.838221       1 proxier.go:259] "Setting route_localnet=1, use nodePortAddresses to filter loopback addresses for NodePorts to skip it https://issues.k8s.io/90259"
I1123 22:35:55.838287       1 proxier.go:259] "Setting route_localnet=1, use nodePortAddresses to filter loopback addresses for NodePorts to skip it https://issues.k8s.io/90259"
I1123 22:35:55.838730       1 server.go:661] "Version info" version="v1.24.6"
I1123 22:35:55.838740       1 server.go:663] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I1123 22:35:55.839354       1 conntrack.go:52] "Setting nf_conntrack_max" nf_conntrack_max=131072
I1123 22:35:55.839447       1 conntrack.go:100] "Set sysctl" entry="net/netfilter/nf_conntrack_tcp_timeout_close_wait" value=3600
I1123 22:35:55.839831       1 config.go:317] "Starting service config controller"
I1123 22:35:55.839971       1 shared_informer.go:255] Waiting for caches to sync for service config
I1123 22:35:55.839988       1 config.go:226] "Starting endpoint slice config controller"
I1123 22:35:55.839991       1 shared_informer.go:255] Waiting for caches to sync for endpoint slice config
I1123 22:35:55.841230       1 config.go:444] "Starting node config controller"
I1123 22:35:55.841242       1 shared_informer.go:255] Waiting for caches to sync for node config
I1123 22:35:55.940499       1 shared_informer.go:262] Caches are synced for endpoint slice config
I1123 22:35:55.940504       1 shared_informer.go:262] Caches are synced for service config
I1123 22:35:55.941540       1 shared_informer.go:262] Caches are synced for node config
==== END logs for container kube-proxy of pod kube-system/kube-proxy-cftfc ====
==== START logs for container kube-scheduler of pod kube-system/kube-scheduler-local-test-control-plane ====
I1123 22:35:34.208887       1 serving.go:348] Generated self-signed cert in-memory
W1123 22:35:36.706665       1 requestheader_controller.go:193] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'
W1123 22:35:36.706742       1 authentication.go:346] Error looking up in-cluster authentication configuration: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot get resource "configmaps" in API group "" in the namespace "kube-system"
W1123 22:35:36.706788       1 authentication.go:347] Continuing without authentication configuration. This may treat all requests as anonymous.
W1123 22:35:36.706808       1 authentication.go:348] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I1123 22:35:36.748229       1 server.go:147] "Starting Kubernetes Scheduler" version="v1.24.6"
I1123 22:35:36.748298       1 server.go:149] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I1123 22:35:36.749153       1 configmap_cafile_content.go:202] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I1123 22:35:36.749182       1 shared_informer.go:255] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I1123 22:35:36.749596       1 secure_serving.go:210] Serving securely on 127.0.0.1:10259
I1123 22:35:36.750917       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
W1123 22:35:36.754510       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E1123 22:35:36.754588       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W1123 22:35:36.754649       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E1123 22:35:36.754677       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W1123 22:35:36.754753       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E1123 22:35:36.754797       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W1123 22:35:36.754886       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E1123 22:35:36.755035       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W1123 22:35:36.755162       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E1123 22:35:36.755179       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W1123 22:35:36.755227       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E1123 22:35:36.755253       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W1123 22:35:36.755299       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E1123 22:35:36.755339       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W1123 22:35:36.755373       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E1123 22:35:36.755392       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W1123 22:35:36.755434       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E1123 22:35:36.755455       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W1123 22:35:36.755507       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E1123 22:35:36.756586       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W1123 22:35:36.756670       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E1123 22:35:36.756695       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W1123 22:35:36.756741       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E1123 22:35:36.756785       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W1123 22:35:36.756892       1 reflector.go:324] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E1123 22:35:36.756916       1 reflector.go:138] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W1123 22:35:36.756965       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E1123 22:35:36.756998       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W1123 22:35:36.759963       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E1123 22:35:36.760217       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W1123 22:35:37.576135       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E1123 22:35:37.576153       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W1123 22:35:37.629351       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E1123 22:35:37.629430       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W1123 22:35:37.645866       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E1123 22:35:37.645948       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W1123 22:35:37.664145       1 reflector.go:324] vendor/k8s.io/client-go/informers/factory.go:134: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E1123 22:35:37.664177       1 reflector.go:138] vendor/k8s.io/client-go/informers/factory.go:134: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
I1123 22:35:38.150006       1 shared_informer.go:262] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I1123 22:35:40.854832       1 leaderelection.go:248] attempting to acquire leader lease kube-system/kube-scheduler...
I1123 22:35:40.857608       1 leaderelection.go:258] successfully acquired lease kube-system/kube-scheduler
==== END logs for container kube-scheduler of pod kube-system/kube-scheduler-local-test-control-plane ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "491"
    },
    "items": [
        {
            "metadata": {
                "name": "local-test-control-plane.172a579a59a821f9",
                "namespace": "default",
                "uid": "9758208b-f20d-4a4f-b414-fd43f5d4da84",
                "resourceVersion": "209",
                "creationTimestamp": "2022-11-23T22:35:38Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "local-test-control-plane",
                "uid": "local-test-control-plane"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node local-test-control-plane status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "local-test-control-plane"
            },
            "firstTimestamp": "2022-11-23T22:35:32Z",
            "lastTimestamp": "2022-11-23T22:35:32Z",
            "count": 4,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "local-test-control-plane.172a579a59a82b40",
                "namespace": "default",
                "uid": "d9e99ed2-126a-41ef-b9cb-352e31bc31fb",
                "resourceVersion": "211",
                "creationTimestamp": "2022-11-23T22:35:38Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "local-test-control-plane",
                "uid": "local-test-control-plane"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node local-test-control-plane status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "local-test-control-plane"
            },
            "firstTimestamp": "2022-11-23T22:35:32Z",
            "lastTimestamp": "2022-11-23T22:35:32Z",
            "count": 4,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "local-test-control-plane.172a579a59a8311c",
                "namespace": "default",
                "uid": "c54d488b-fcea-45e1-848a-a376ba2e66ef",
                "resourceVersion": "212",
                "creationTimestamp": "2022-11-23T22:35:38Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "local-test-control-plane",
                "uid": "local-test-control-plane"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node local-test-control-plane status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "local-test-control-plane"
            },
            "firstTimestamp": "2022-11-23T22:35:32Z",
            "lastTimestamp": "2022-11-23T22:35:32Z",
            "count": 4,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "local-test-control-plane.172a579c013f6a5e",
                "namespace": "default",
                "uid": "9d78badd-6641-4687-b593-42790f587fc9",
                "resourceVersion": "235",
                "creationTimestamp": "2022-11-23T22:35:39Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "local-test-control-plane",
                "uid": "local-test-control-plane"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "local-test-control-plane"
            },
            "firstTimestamp": "2022-11-23T22:35:39Z",
            "lastTimestamp": "2022-11-23T22:35:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "local-test-control-plane.172a579c0808086c",
                "namespace": "default",
                "uid": "f3913fea-4bb9-4799-8d65-bec29c702a29",
                "resourceVersion": "238",
                "creationTimestamp": "2022-11-23T22:35:39Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "local-test-control-plane",
                "uid": "local-test-control-plane"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node local-test-control-plane status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "local-test-control-plane"
            },
            "firstTimestamp": "2022-11-23T22:35:39Z",
            "lastTimestamp": "2022-11-23T22:35:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "local-test-control-plane.172a579c080811dd",
                "namespace": "default",
                "uid": "f4ea4e9c-5fc8-4481-ae0b-9cb8b925d8c6",
                "resourceVersion": "239",
                "creationTimestamp": "2022-11-23T22:35:39Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "local-test-control-plane",
                "uid": "local-test-control-plane"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node local-test-control-plane status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "local-test-control-plane"
            },
            "firstTimestamp": "2022-11-23T22:35:39Z",
            "lastTimestamp": "2022-11-23T22:35:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "local-test-control-plane.172a579c08081983",
                "namespace": "default",
                "uid": "1ba1dcda-54bb-4a98-a0ad-603a6486cbed",
                "resourceVersion": "240",
                "creationTimestamp": "2022-11-23T22:35:39Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "local-test-control-plane",
                "uid": "local-test-control-plane"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node local-test-control-plane status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "local-test-control-plane"
            },
            "firstTimestamp": "2022-11-23T22:35:39Z",
            "lastTimestamp": "2022-11-23T22:35:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "local-test-control-plane.172a579c09003112",
                "namespace": "default",
                "uid": "fe52876d-9148-44df-bfbe-ae027bf830d6",
                "resourceVersion": "242",
                "creationTimestamp": "2022-11-23T22:35:39Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "local-test-control-plane",
                "uid": "local-test-control-plane"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "local-test-control-plane"
            },
            "firstTimestamp": "2022-11-23T22:35:39Z",
            "lastTimestamp": "2022-11-23T22:35:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "local-test-control-plane.172a579f608a7822",
                "namespace": "default",
                "uid": "1c3b7f5c-41f3-49b6-9a18-71dd3d7a6e2f",
                "resourceVersion": "329",
                "creationTimestamp": "2022-11-23T22:35:53Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "local-test-control-plane",
                "uid": "3e5417dc-fe49-4b11-abf7-afdb9e35354c",
                "apiVersion": "v1"
            },
            "reason": "RegisteredNode",
            "message": "Node local-test-control-plane event: Registered Node local-test-control-plane in Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2022-11-23T22:35:53Z",
            "lastTimestamp": "2022-11-23T22:35:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "local-test-control-plane.172a579fd2a51d1a",
                "namespace": "default",
                "uid": "ac206ac6-b163-433c-8ee0-11cbb8e81cdd",
                "resourceVersion": "398",
                "creationTimestamp": "2022-11-23T22:35:55Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "local-test-control-plane",
                "uid": "local-test-control-plane"
            },
            "reason": "Starting",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2022-11-23T22:35:55.839639Z",
            "action": "StartKubeProxy",
            "reportingComponent": "kube-proxy",
            "reportingInstance": "kube-proxy-local-test-control-plane"
        },
        {
            "metadata": {
                "name": "local-test-control-plane.172a57a0d16cfe6d",
                "namespace": "default",
                "uid": "25d4953e-9513-448f-9621-43d807888219",
                "resourceVersion": "411",
                "creationTimestamp": "2022-11-23T22:36:00Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "local-test-control-plane",
                "uid": "local-test-control-plane"
            },
            "reason": "NodeReady",
            "message": "Node local-test-control-plane status is now: NodeReady",
            "source": {
                "component": "kubelet",
                "host": "local-test-control-plane"
            },
            "firstTimestamp": "2022-11-23T22:36:00Z",
            "lastTimestamp": "2022-11-23T22:36:00Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "491"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "491"
    },
    "items": [
        {
            "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "uid": "d53b765b-85e6-46a9-8f8c-d80074c6126c",
                "resourceVersion": "198",
                "creationTimestamp": "2022-11-23T22:35:37Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 6443
                    }
                ],
                "clusterIP": "10.96.0.1",
                "clusterIPs": [
                    "10.96.0.1"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "491"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "491"
    },
    "items": []
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "491"
    },
    "items": []
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "491"
    },
    "items": []
}
